{
  "type": "code_generation",
  "timestamp": "2025-04-18T15:13:32.778Z",
  "taskId": "P360-43",
  "language": "java",
  "prompt": "Generate java code for the following task:\n\nTask ID: P360-43\nSummary: P360 sample business requirement task\nDescription: Create a order management API where itBackground\n\nThe customer service team currently receives feedback through a web form, but has no automated way to be notified when urgent issues are reported. Team members must regularly check the system, causing delays in addressing time-sensitive customer concerns.\n\nh2. Business Requirement\n\nCreate a notification system that alerts the appropriate customer service team member when customer feedback requiring immediate attention is submitted.\n\nh2. Key Features\n\n# Automatically analyze incoming feedback for urgent keywords or negative sentiment\n# Route notifications to the appropriate team member based on the feedback category\n# Allow team members to acknowledge receipt of notifications\n# Provide a simple dashboard showing pending and acknowledged urgent feedback\n\nh2. Success Criteria\n\n* Urgent feedback notifications are sent within 2 minutes of submission\n* Team members acknowledge receipt of 95% of urgent notifications within 15 minutes during business hours\n* Customer satisfaction for urgent issues improves by 10% within three months is fetching \nSecurity Level: high\nAuthentication Method: oauth\nData Sensitivity: internal\n\n\n# java Project Structure\n\n## Project Structure\n```\nproject/\n├── src/\n│   ├── components/        # Reusable components\n│   ├── pages/            # Page components\n│   ├── services/         # API services\n│   ├── hooks/            # Custom hooks\n│   ├── context/          # Context providers\n│   ├── utils/            # Utility functions\n│   ├── assets/           # Static assets\n│   └── App.js            # Main application\n├── public/               # Public files\n├── package.json          # Project dependencies\n└── README.md            # Project documentation\n```\n\n\n# Java Security Code Generation Prompt\n\n## Security Requirements\n- Implement OWASP Top 10 security controls\n- Follow Java security best practices\n- Use secure frameworks and configurations\n- Implement proper authentication and authorization\n- Handle sensitive data securely\n\n## Input Parameters\n- Application Type: {{appType}}\n- Security Level: {{securityLevel}}\n- Authentication Method: {{authMethod}}\n- Data Sensitivity: {{dataSensitivity}}\n\n## Security Controls\n1. Input Validation\n2. Authentication\n3. Authorization\n4. Session Management\n5. Data Protection\n6. Error Handling\n7. Logging\n8. API Security\n9. Dependency Security\n10. Infrastructure Security\n\n## Expected Output\n- Secure code implementation\n- Security configuration\n- Security documentation\n- Security testing plan\n\n\nRequirements:\n1. Follow the highest security standards based on security level (high)\n2. Implement appropriate data protection based on sensitivity (internal)\n3. Use proper authentication method (oauth)",
  "parameters": {
    "securityLevel": "high",
    "authMethod": "oauth",
    "dataSensitivity": "internal"
  },
  "generatedFiles": [
    "project/src/services/NotificationService.java",
    "project/src/services/NotificationServiceTest.java"
  ]
}