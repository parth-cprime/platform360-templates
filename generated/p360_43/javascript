// src/controllers/OrderController.js

const OrderService = require('../services/OrderService');
const { validateCreateOrder, validateUpdateOrder } = require('../middleware/ValidationMiddleware');

class OrderController {
  async createOrder(req, res, next) {
    try {
      await validateCreateOrder(req.body);
      const order = await OrderService.createOrder(req.body);
      res.status(201).json(order);
    } catch (error) {
      next(error);
    }
  }

  async getOrder(req, res, next) {
    try {
      const order = await OrderService.getOrderById(req.params.id);
      if (!order) {
        res.status(404).json({ error: 'Order not found' });
      } else {
        res.json(order);
      }
    } catch (error) {
      next(error);
    }
  }

  async updateOrder(req, res, next) {
    try {
      await validateUpdateOrder(req.body);
      const order = await OrderService.updateOrder(req.params.id, req.body);
      if (!order) {
        res.status(404).json({ error: 'Order not found' });
      } else {
        res.json(order);
      }
    } catch (error) {
      next(error);
    }
  }

  async deleteOrder(req, res, next) {
    try {
      const deleted = await OrderService.deleteOrder(req.params.id);
      if (!deleted) {
        res.status(404).json({ error: 'Order not found' });
      } else {
        res.sendStatus(204);
      }
    } catch (error) {
      next(error);
    }
  }
}

module.exports = new OrderController();
