import java.security.SecureRandom;

public class PasswordGenerator {
  
  public static void main(String[] args) {  
    String password = generatePassword(12);
    System.out.println("Generated Password: " + password);
  }

  public static String generatePassword(int length) {
    // Validate input
    if (length < 8) {
      throw new IllegalArgumentException("Password length must be at least 8 characters");
    }
    
    // Define character sets to choose from  
    String upperCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    String lowerCase = "abcdefghijklmnopqrstuvwxyz";
    String numbers = "0123456789";
    String specialChars = "!@#$%^&*()_+-=[];,./{}:<>?";
    
    // Combine character sets into one string
    String allChars = upperCase + lowerCase + numbers + specialChars;
    
    // Use SecureRandom to generate password
    SecureRandom random = new SecureRandom();
    StringBuilder password = new StringBuilder();
    
    // Ensure password has at least one of each required char type
    password.append(getRandomChar(upperCase, random)); 
    password.append(getRandomChar(lowerCase, random));
    password.append(getRandomChar(numbers, random)); 
    password.append(getRandomChar(specialChars, random));

    // Generate remaining characters
    for (int i = 4; i < length; i++) {
      password.append(getRandomChar(allChars, random));  
    }
    
    return password.toString();
  }

  private static char getRandomChar(String charSet, SecureRandom random) {
    int randomIndex = random.nextInt(charSet.length());
    return charSet.charAt(randomIndex);
  }

}
