exports.createOrder = async (customerId, products) => {
  const totalAmount = products.reduce((total, product) => {
    return total + product.price * product.quantity;
  }, 0);

  const order = new Order({
    customerId,
    products,
    totalAmount,
  });

  await order.save();
  return order;
};

exports.getOrderById = async (orderId) => {
  const order = await Order.findById(orderId).populate('customerId').populate('products.productId');
  if (!order) {
    throw new Error('Order not found');
  }
  return order;
};
```
Description: The `orderService` contains the business logic for creating and retrieving orders. It interacts with the `orderModel` to perform database operations.