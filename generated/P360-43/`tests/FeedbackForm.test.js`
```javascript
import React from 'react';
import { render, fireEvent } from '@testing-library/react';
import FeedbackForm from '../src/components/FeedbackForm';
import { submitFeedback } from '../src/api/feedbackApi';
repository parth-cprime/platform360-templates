jest.mock('../src/api/feedbackApi');

describe('FeedbackForm', () => {
  beforeEach(() => {
    submitFeedback.mockClear();
  });

  it('submits feedback successfully', async () => {
    const { getByText, getByRole } = render(<FeedbackForm />);
    const textarea = getByRole('textbox');
    const submitButton = getByText('Submit Feedback');

    fireEvent.change(textarea, { target: { value: 'Test feedback' } });
    fireEvent.click(submitButton);

    expect(submitFeedback).toHaveBeenCalledWith('Test feedback');
    expect(textarea.value).toBe('');
  });

  it('handles submission error', async () => {
    const errorMessage = 'Submission failed';
    submitFeedback.mockRejectedValueOnce(new Error(errorMessage));

    const { getByText, getByRole } = render(<FeedbackForm />);
    const textarea = getByRole('textbox');
    const submitButton = getByText('Submit Feedback');

    fireEvent.change(textarea, { target: { value: 'Test feedback' } });
    fireEvent.click(submitButton);

    expect(submitFeedback).toHaveBeenCalledWith('Test feedback');
    expect(textarea.value).toBe('Test feedback');
    expect(window.alert).toHaveBeenCalledWith(expect.stringContaining('An error occurred'));
  });
});
```
This file contains unit tests for the `FeedbackForm` component using the React Testing Library. It tests the successful submission of feedback and handling of submission errors.