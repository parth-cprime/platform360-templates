jest.mock('axios');
jest.mock('../src/utils/auth');

describe('feedbackApi', () => {
  beforeEach(() => {
    axios.post.mockClear();
    axios.get.mockClear();
    getToken.mockClear();
  });

  it('submits feedback successfully', async () => {
    const token = 'mockToken';
    const feedback = 'Test feedback';
    const response = { data: { message: 'Feedback submitted' } };
    axios.post.mockResolvedValueOnce(response);
    getToken.mockReturnValueOnce(token);

    const result = await submitFeedback(feedback);

    expect(getToken).toHaveBeenCalled();
    expect(axios.post).toHaveBeenCalledWith(
      'http://localhost:5000/api/feedback',
      { feedback },
      { headers: { Authorization: `Bearer ${token}` } }
    );
    expect(result).toEqual(response.data);
  });

  it('retrieves notifications successfully', async () => {
    const token = 'mockToken';
    const response = { data: [{ id: 1, message: 'Notification 1' }] };
    axios.get.mockResolvedValueOnce(response);
    getToken.mockReturnValueOnce(token);

    const result = await getNotifications();

    expect(getToken).toHaveBeenCalled();
    expect(axios.get).toHaveBeenCalledWith(
      'http://localhost:5000/api/notifications',
      { headers: { Authorization: `Bearer ${token}` } }
    );
    expect(result).toEqual(response.data);
  });
});
```
This file contains unit tests for the `feedbackApi` module. It tests the successful submission of feedback and retrieval of notifications using mocked Axios and `getToken` function.