import axios from 'axios';
import jwtDecode from 'jwt-decode';

const AuthService = {
  async login(credentials) {
    try {
      const response = await axios.post('/api/login', credentials);
      const { token } = response.data;
      localStorage.setItem('token', token);
    } catch (error) {
      console.error('Error logging in:', error);
      throw error;
    }
  },

  logout() {
    localStorage.removeItem('token');
  },

  isAuthenticated() {
    const token = localStorage.getItem('token');
    if (!token) {
      return false;
    }
    const decodedToken = jwtDecode(token);
    const currentTime = Date.now() / 1000;
    return decodedToken.exp > currentTime;
  },
};

export default AuthService;

Description:
This file contains the `AuthService`, which handles authentication and authorization using JWT (JSON Web Tokens). It provides methods for logging in, logging out, and checking if the user is authenticated. The `login` method sends the user credentials to the `/api/login` endpoint and stores the received token in the browser's local storage. The `isAuthenticated` method checks if a valid token exists in the local storage.